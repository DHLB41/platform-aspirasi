version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: platform-postgres
    environment:
      POSTGRES_DB: platform_dev
      POSTGRES_USER: platform_user
      POSTGRES_PASSWORD: dev_password_2024
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,uuid-ossp,pg_trgm
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - platform-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U platform_user -d platform_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - platform-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: platform-storage
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9002:9000"  # API
      - "9003:9001"  # Console
    volumes:
      - minio_data:/data
    networks:
      - platform-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    container_name: platform-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - platform-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: platform-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@platform.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - platform-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:
  pgadmin_data:

networks:
  platform-network:
    driver: bridge